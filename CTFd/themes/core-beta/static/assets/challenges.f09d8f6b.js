import{C as l,m as i,h as d,T as c,d as u,M as g,a as p}from"./index.963d67df.js";import{V as f,C as w,h as m}from"./CommentBox.d3ca2d7e.js";window.values=[];window.TEAM_ID=l.team.id;window.USER_ID=l.user.id;function h(e){let t=new DOMParser().parseFromString(e,"text/html");return t.querySelectorAll('a[href*="://"]').forEach(n=>{n.setAttribute("target","_blank")}),t.documentElement.outerHTML}window.Alpine=i;i.store("challenge",{data:{view:""}});i.data("Hint",()=>({id:null,html:null,async showHint(e){if(e.target.open){let t=(await l.pages.challenge.loadHint(this.id)).data;if(t.content)this.html=h(t.html);else if(await l.pages.challenge.displayUnlock(this.id)){let n=await l.pages.challenge.loadUnlock(this.id);if(n.success){let o=(await l.pages.challenge.loadHint(this.id)).data;this.html=h(o.html)}else e.target.open=!1,l._functions.challenge.displayUnlockError(n)}else e.target.open=!1}}}));i.data("Challenge",()=>({id:null,next_id:null,submission:"",tab:null,solves:[],response:null,share_url:null,async init(){d()},getStyles(){let e={"modal-dialog":!0};try{switch(l.config.themeSettings.challenge_window_size){case"sm":e["modal-sm"]=!0;break;case"lg":e["modal-lg"]=!0;break;case"xl":e["modal-xl"]=!0;break;default:break}}catch(s){console.log("Error processing challenge_window_size"),console.log(s)}return e},async init(){d()},async showChallenge(){new c(this.$el).show()},async showSolves(){this.solves=await l.pages.challenge.loadSolves(this.id),console.log(this.solves),this.solves.forEach(e=>(e.date=u(e.date).format("MMMM Do, h:mm:ss A"),e)),new c(this.$el).show()},async showComments(){const e=f.extend(w);let s=document.createElement("div");console.log(window),document.querySelector("#comment-box").appendChild(s),new e({propsData:{type:"team",id:window.TEAM_ID,challenge_id:this.id}}).$mount(s),new c(this.$el).show()},getNextId(){return i.store("challenge").data.next_id},async nextChallenge(){let e=g.getOrCreateInstance("[x-ref='challengeWindow']");e._element.addEventListener("hidden.bs.modal",s=>{i.nextTick(()=>{this.$dispatch("load-challenge",this.getNextId())})},{once:!0}),e.hide()},async getShareUrl(){let e={type:"solve",challenge_id:this.id};const a=(await(await l.fetch("/api/v1/shares",{method:"POST",body:JSON.stringify(e)})).json()).data.url;this.share_url=a},copyShareUrl(){navigator.clipboard.writeText(this.share_url);let e=p.getOrCreateInstance(this.$el);e.enable(),e.show(),setTimeout(()=>{e.hide(),e.disable()},2e3)},async submitChallenge(){console.log(this.submission),this.response=await l.pages.challenge.submitChallenge(this.id,this.submission),await this.renderSubmissionResponse()},async renderSubmissionResponse(){this.response.data.status==="correct"&&(this.submission=""),this.$dispatch("load-challenges")},async submitManualChallenge(){let e=document.getElementById("form-file-input");document.getElementById("form-file-input").value=this;try{await m.files.upload(e,{},async function(s){let t=document.getElementById("form-file-input").value;t.$dispatch("load-challenges");try{t.response=await l.pages.challenge.submitChallenge(t.id,JSON.stringify(s.data)),t.response.success?(t.response.data.status="correct",t.response.data.message="succesfuly send!"):(t.response.data.status="incorrect",t.response.data.message="en error happen pls contact the admin"),t.$dispatch("load-challenges"),console.log(JSON.stringify(s.data))}catch(a){t.response={},t.response.data={},t.response.data.status="incorrect",t.response.data.message="en error happen pls contact the admin for "+a,t.$dispatch("load-challenges")}})}catch(s){this.response={},this.response.data={},this.response.data.status="incorrect",this.response.data.message="en error happen pls contact the admin for "+s,this.$dispatch("load-challenges")}}}));i.data("ChallengeBoard",()=>({loaded:!1,challenges:[],challenge:null,async init(){let e={};e.team_id=window.TEAM_ID;let s=e;s.page=1,s.per_page=1e4,this.challenges=await l.pages.challenges.getChallenges();let t=await l.pages.scoreboard.getScoreboard();await l.pages.scoreboard.getScoreboardDetail(t.length),this.comments=await m.comments.get_comments(s),this.maxScore=0,this.solveScore=0,this.submitScore=0;for(let a in this.challenges){let n=this.challenges[a].value;this.challenges[a].solved_by_me?this.solveScore+=n:this.challenges[a].submited&&(this.submitScore+=n),this.maxScore+=n}document.getElementById("scoreProgressTitle").textContent=this.solveScore+this.submitScore+" points",document.getElementById("scoreProgressBar").value=100*((this.solveScore+this.submitScore)/this.maxScore),document.getElementById("scoreProgressText").textContent=""+parseInt(100*(this.submitScore/(this.solveScore+this.submitScore)))+"% des points en approbations",this.commentsChallengeDict={};for(let a in this.comments.data){let n=this.comments.data[a].content;if(n.search("#")!=-1){n=n.split("#")[1];let r=n.search(":"),o=0;r!=-1,o=parseInt(n.split(":")[0]),this.commentsChallengeDict[o]!=null?this.commentsChallengeDict[o]=this.commentsChallengeDict[o]+1:this.commentsChallengeDict[o]=1}}for(let a in this.commentsChallengeDict)document.getElementById(a+"a").className="fas fa-comments float-end",document.getElementById(a).textContent=this.commentsChallengeDict[a]>99?99:this.commentsChallengeDict[a];if(this.loaded=!0,window.location.hash){let a=decodeURIComponent(window.location.hash.substring(1)),n=a.lastIndexOf("-");if(n>=0){let o=[a.slice(0,n),a.slice(n+1)][1];await this.loadChallenge(o)}}},getCategories(){const e=[];this.challenges.forEach(s=>{const{category:t}=s;e.includes(t)||e.push(t)});try{const s=l.config.themeSettings.challenge_category_order;if(s){const t=new Function(`return (${s})`);e.sort(t())}}catch(s){console.log("Error running challenge_category_order function"),console.log(s)}return e},getChallenges(e){let s=this.challenges;e!==null&&(s=this.challenges.filter(t=>t.category===e));try{const t=l.config.themeSettings.challenge_order;if(t){const a=new Function(`return (${t})`);s.sort(a())}}catch(t){console.log("Error running challenge_order function"),console.log(t)}return s},async loadChallenges(){this.challenges=await l.pages.challenges.getChallenges(),console.log(this.comments)},async loadChallenge(e){await l.pages.challenge.displayChallenge(e,s=>{s.data.view=h(s.data.view),i.store("challenge").data=s.data,i.nextTick(()=>{let t=g.getOrCreateInstance("[x-ref='challengeWindow']");t._element.addEventListener("hidden.bs.modal",a=>{history.replaceState(null,null," ")},{once:!0}),t.show(),history.replaceState(null,null,`#${s.data.name}-${e}`)})})}}));i.start();
